import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib import style
style.use("ggplot")

!pip install alpaca-trade-api

import configparser as ConfigParser
import alpaca_trade_api as tradeapi
import asyncio

configParser = ConfigParser.RawConfigParser()
configFile = 'config.cfg'
configParser.read(configFile)
API_KEY = configParser.get('alpaca', 'api_key')
API_SECRET = configParser.get('alpaca', 'api_secret')
rest_api = tradeapi.rest.REST (API_KEY, API_SECRET, base_url= 'https://paper-api.alpaca.markets')

account = rest_api.get_account ()
account

account.status

clock = rest_api.get_clock()
if clock.is_open:
  print("Market Is open")
else:
  time_to_open = clock.next_open - clock.timestamp
print (f"Market is closed now. It will open in {time_to_open.total_seconds()//60//60} hours")

order_info = rest_api.submit_order(symbol='AAPL', 
                                   notional=500,
                                   side='buy',
                                   type='market',
                                   time_in_force="day")
order_info
Itp = rest_api.get_latest_trade('SPY')
#Itp_crypto = api.get_latest_crypto_trade('BTCUSD')
Itp

order_info = rest_api.submit_order(symbol='SPY', 
                                    qty = 1, 
                                    #notional=508, 
                                    side='buy', 
                                    type='limit',
                                    limit_price=430,
                                    time_in_force='day')
order_info


orders = rest_api.list_orders(status='open')
orders
positions = rest_api.list_positions()
positions
order = rest_api.close_position("AAPL")

assets = rest_api.list_assets()
assets
rest_api.get_asset('AAPL')

spy_bars = rest_api.get_bars('SPY', '1Day', '2021-01-01', '2023-08-23').df
spy_bars
bars = rest_api.get_bars(["TSLA", "MSFT", "GM", "JPM", "GHE"], '1Day' '2021-01-01', '2021-04-26').df.reset_index()
bars
bars.set_index(['timestamp', "symbol"], drop=True).sort_index()
bars['close'].plot()
spy_trades = rest_api.get_trades('spy', '2021-04-26', '2021-04-26', limit=100).df
spy_trades
#trades tick data of spy 
spy_quotes = rest_api.get_quotes('SPY', '2021-04-26', '2021-04-26', limit=100).df
spy_quotes
spy_quotes = rest_api.get_quotes('SPY', '2021-04-26',  '2021-04-26', limit='100').df
spy_quotes
